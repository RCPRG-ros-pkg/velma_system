<subsystem_definition>

    <buffers>
        <in  alias="b_st"   type="velma_core_cs_ve_body_msgs::Status"     side="bottom" />
        <out alias="b_cmd"  type="velma_core_cs_ve_body_msgs::Command"    side="bottom"/>

        <in  alias="cmd"    type="velma_core_cs_task_cs_msgs::Command"    side="top"/>
        <out alias="st"     type="velma_core_cs_task_cs_msgs::Status"     side="top"/>

        <in  alias="pred_ctrl_cmd" type="velma_core_cs_task_cs_msgs::Command"   side="top"/>
        <out alias="pred_ctrl_st"  type="velma_core_cs_task_cs_msgs::Status"    side="top"/>
    </buffers>

    <buffer_groups>
        <buffer_group name="all_inputs" >
            <obligatory name="b_st" />
            <optional name="cmd" />
            <optional name="pred_ctrl_cmd" />
        </buffer_group>
    </buffer_groups>

    <predicates>
        <predicate name="veBodyInSafeState" />
        <predicate name="veBodyStatusValid" />
        <predicate name="recvCartImpCmd" />
        <predicate name="recvJntImpCmd" />
        <predicate name="recvSafeColCmd" />
        <predicate name="recvOneCmd" />
        <predicate name="inSelfCollision" />
        <predicate name="motorsReady" />
    </predicates>

    <behaviors>
        <behavior name="position_hands_neck"
            stop_cond="FALSE"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or veBodyInSafeState" >
            <running_component name="JTG_head" />
            <running_component name="VL_hp" />
            <running_component name="VL_ht" />
            <running_component name="S_q_head" />
            <running_component name="S_dq_head" />
            <running_component name="C_q_head" />
            <running_component name="C_dq_head" />
            <running_component name="b_stSplit" />
            <running_component name="cmdSplit" />
            <running_component name="C_q_all" />
            <running_component name="C_dq_all" />
            <running_component name="stConcate" />
            <running_component name="b_cmdConcate" />
            <running_component name="Y" />
        </behavior>

        <behavior name="idle"
            stop_cond="veBodyStatusValid and (not veBodyInSafeState)"
            err_cond="FALSE" >
            <running_component name="idle" />
            <running_component name="S_t_body" />
            <running_component name="b_stSplit" />
            <running_component name="stConcate" />
            <running_component name="b_cmdConcate" />
            <running_component name="Y" />
        </behavior>

        <behavior name="safe"
            stop_cond="recvOneCmd and (((recvCartImpCmd or recvJntImpCmd) and (not inSelfCollision)) or recvSafeColCmd) and motorsReady"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or veBodyInSafeState" >
            <running_component name="safe" />
            <running_component name="Mass" />
            <running_component name="JntImpSafe" />
            <running_component name="S_t_body" />
            <running_component name="C_q_body" />
            <running_component name="C_dq_body" />
            <running_component name="C_q_head" />
            <running_component name="C_dq_head" />
            <running_component name="C_q_all" />
            <running_component name="C_dq_all" />
            <running_component name="cmdSplit" />
            <running_component name="ZeroVec8" />
            <running_component name="b_stSplit" />
            <running_component name="stConcate" />
            <running_component name="b_cmdConcate" />
            <running_component name="ColDet" />
            <running_component name="ColDetWrR" />
            <running_component name="ColDetWrL" />
            <running_component name="ObjParamIdentif" />  
            <running_component name="Y" />
        </behavior>

        <behavior name="safe_col"
            stop_cond="recvOneCmd and (recvCartImpCmd or recvJntImpCmd) and (not inSelfCollision)"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or veBodyInSafeState" >
            <running_component name="safe_col" />
            <running_component name="Mass" />
            <running_component name="S_t_body" />
            <running_component name="C_q_body" />
            <running_component name="C_dq_body" />
            <running_component name="C_q_all" />
            <running_component name="C_dq_all" />
            <running_component name="ZeroVec8" />
            <running_component name="b_stSplit" />
            <running_component name="stConcate" />
            <running_component name="b_cmdConcate" />
            <running_component name="wcc_r" />
            <running_component name="wcc_l" />
            <running_component name="ColDetRep" />
            <running_component name="ColDetWrR" />
            <running_component name="ColDetWrL" />
            <running_component name="ObjParamIdentif" />   
            <running_component name="MassStatCtrl" /> 
            <!-- <running_component name="MassDynCtrl" />              -->
            <running_component name="Y" />
        </behavior>

        <behavior name="cart_imp"
            stop_cond="(recvOneCmd and (recvJntImpCmd or recvSafeColCmd)) or inSelfCollision"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or (veBodyInSafeState)" >
            <running_component name="cart_imp" />
            <running_component name="CImp" />
            <running_component name="Mass" />
            <running_component name="JntLimit" />
            <running_component name="INT_pose_l" />
            <running_component name="INT_pose_r" />
            <running_component name="INT_tool_r" />
            <running_component name="INT_tool_l" />
            <running_component name="INT_imp_r" />
            <running_component name="INT_imp_l" />
            <running_component name="FK" />
            <running_component name="wcc_r" />
            <running_component name="wcc_l" />
            <running_component name="S_t_body" />
            <running_component name="C_q_body" />
            <running_component name="C_dq_body" />
            <running_component name="C_q_all" />
            <running_component name="C_dq_all" />
            <running_component name="ZeroVec8" />
            <running_component name="b_stSplit" />
            <running_component name="cmdSplit" />
            <running_component name="stConcate" />
            <running_component name="b_cmdConcate" />
    <!--            <running_component name="ColDet" />-->
            <running_component name="ColDetRep" />
            <running_component name="ColDetWrR" />
            <running_component name="ColDetWrL" />
            <running_component name="ObjParamIdentif" />
            <running_component name="MassStatCtrl" />
            <!-- <running_component name="MassDynCtrl" />              -->
            <running_component name="Y" />
        </behavior>

        <behavior name="jnt_imp"
            stop_cond="(recvOneCmd and (recvCartImpCmd or recvSafeColCmd)) or inSelfCollision"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or (veBodyInSafeState)" >
            <running_component name="jnt_imp" />
            <running_component name="Mass" />
            <running_component name="JTG_body" />
    <!--            <running_component name="FK" />-->
            <running_component name="JntImp" />
            <running_component name="S_t_body" />
            <running_component name="C_q_body" />
            <running_component name="C_dq_body" />
            <running_component name="C_q_all" />
            <running_component name="C_dq_all" />
            <running_component name="ZeroVec8" />
            <running_component name="b_stSplit" />
            <running_component name="cmdSplit" />
            <running_component name="stConcate" />
            <running_component name="b_cmdConcate" />
    <!--            <running_component name="ColDet" />-->
            <running_component name="ColDetRepJntImp" />
            <running_component name="ColDetWrR" />
            <running_component name="ColDetWrL" />
            <running_component name="ObjParamIdentif" />
            <running_component name="MassStatCtrl" />
            <!-- <running_component name="MassDynCtrl" />              -->
            <running_component name="Y" />
        </behavior>
<!--
        <behavior name="fcl"
            init_cond="FALSE"
            stop_cond="TRUE"
            err_cond="(not CURRENT_BEHAVIOR_OK) or (not veBodyStatusValid) or (veBodyInSafeState) or inSelfCollision" >
            <running_component name="fcl" />
            <running_component name="CImp" />
            <running_component name="Mass" />
            <running_component name="JntLimit" />
            <running_component name="LeftForceControl" />
            <running_component name="RightForceControl" />
            <running_component name="LeftForceTransformation" />
            <running_component name="RightForceTransformation" />
            <running_component name="FK" />
            <scope name="upper_body" />
        </behavior>
-->
    </behaviors>

    <states initial="idle">
        <state name="idle">
            <behavior name="idle" />
            <next_state name="safe" init_cond="TRUE"/>
            <buffer_group name="all_inputs" min_period="0" first_timeout="0.002" next_timeout="0.002" first_timeout_sim="1.0" used_time="sim" />
        </state>

        <state name="safe">
<!--            <behavior name="safe_hands_neck" />-->
            <behavior name="safe" />
            <next_state name="idle" init_cond="IN_ERROR"/>
            <next_state name="cart_imp" init_cond="(not IN_ERROR) and recvCartImpCmd"/>
            <next_state name="jnt_imp" init_cond="(not IN_ERROR) and recvJntImpCmd"/>
            <next_state name="safe_col" init_cond="(not IN_ERROR) and recvSafeColCmd"/>
            <buffer_group name="all_inputs" min_period="0" first_timeout="0.002" next_timeout="0.002" first_timeout_sim="1.0" used_time="sim" />
        </state>

        <state name="safe_col">
            <behavior name="position_hands_neck" />
            <behavior name="safe_col" />
            <next_state name="idle" init_cond="IN_ERROR"/>
            <next_state name="cart_imp" init_cond="(not IN_ERROR) and recvCartImpCmd"/>
            <next_state name="jnt_imp" init_cond="(not IN_ERROR) and recvJntImpCmd"/>
            <buffer_group name="all_inputs" min_period="0" first_timeout="0.002" next_timeout="0.002" first_timeout_sim="1.0" used_time="sim" />
        </state>

        <state name="cart_imp">
            <behavior name="position_hands_neck" />
            <behavior name="cart_imp" />
            <next_state name="idle" init_cond="IN_ERROR"/>
            <next_state name="safe" init_cond="(not IN_ERROR) and (not recvOneCmd)"/>
            <next_state name="jnt_imp" init_cond="(not IN_ERROR) and recvOneCmd and recvJntImpCmd"/>
            <next_state name="safe_col" init_cond="(not IN_ERROR) and recvOneCmd and recvSafeColCmd"/>
            <buffer_group name="all_inputs" min_period="0" first_timeout="0.002" next_timeout="0.002" first_timeout_sim="1.0" used_time="sim" />
        </state>

        <state name="jnt_imp">
            <behavior name="position_hands_neck" />
            <behavior name="jnt_imp" />
            <next_state name="idle" init_cond="IN_ERROR"/>
            <next_state name="safe" init_cond="(not IN_ERROR) and (not recvOneCmd)"/>
            <next_state name="cart_imp" init_cond="(not IN_ERROR) and recvOneCmd and recvCartImpCmd"/>
            <next_state name="safe_col" init_cond="(not IN_ERROR) and recvOneCmd and recvSafeColCmd"/>
            <buffer_group name="all_inputs" min_period="0" first_timeout="0.002" next_timeout="0.002" first_timeout_sim="1.0" used_time="sim" />
        </state>
    </states>

    <simulation use_ros_sim_clock="true" use_sim_clock="true" />

</subsystem_definition>
