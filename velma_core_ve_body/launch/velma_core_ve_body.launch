<?xml version="1.0"?>
<launch>
  <arg name="ORO_LOGLEVEL" default="3"/>
  <arg name="debug" default="false"/>
  <arg name="cset" default="false"/>
  <arg name="valgrind" default="false"/>

  <arg unless="$(arg cset)"  name="CSET_LAUNCH_PREFIX" value=""/>
  <arg     if="$(arg cset)"  name="CSET_LAUNCH_PREFIX" value="cset proc -s user -e --"/>

  <arg unless="$(arg debug)" name="LAUNCH_PREFIX" value=""/>
  <arg     if="$(arg debug)" name="LAUNCH_PREFIX" value="gdb -ex run --args "/>

  <arg unless="$(arg valgrind)" name="LAUNCH_PREFIX_2" value=""/>
  <arg     if="$(arg valgrind)" name="LAUNCH_PREFIX_2" value="valgrind --leak-check=yes "/>

  <node
    name="velma_core_ve_body"
    pkg="subsystem_deployer"
    type="deployer"
    output="screen"
    launch-prefix="$(arg CSET_LAUNCH_PREFIX) $(arg LAUNCH_PREFIX_2) $(arg LAUNCH_PREFIX)"
    args="--DeployerName velma_core_ve_body -x $(find velma_core_ve_body)/config/velma_core_ve_body.xml -m velma_core_ve_body -p 20 -c 2 --"
  >
    <env name="ORO_LOGLEVEL" value="$(arg ORO_LOGLEVEL)"/>
    <!-- <env name="LD_PRELOAD" value="librtt_malloc_hook.so" /> -->
  </node>

  <group ns="velma_core_ve_body">
    <rosparam>
      safe:
        l_arm_damping_factors: [10, 10, 5, 5, 2, 1, 1]
        r_arm_damping_factors: [10, 10, 5, 5, 2, 1, 1]
        torso_damping_factor: 20
        arm_q_limits_lo: [-2.96, -2.09, -2.96, -2.09, -2.96, -2.09, -2.96]
        arm_q_limits_hi: [2.96, 2.09, 2.96, 2.09, 2.96, 2.09, 2.96]
        arm_dq_limits: [2, 2, 2, 2, 2, 2, 2]
        arm_t_limits: [100.0, 100.0, 100.0, 100.0, 100.0, 60.0, 60.0]
      safe_lwr_r:
        damping_factors: [10, 10, 5, 5, 2, 1, 1]
      safe_lwr_l:
        damping_factors: [10, 10, 5, 5, 2, 1, 1]
      safe_t:
        control_mode: torque
        damping_factor: 20
        gear: 158.0
        encoder_resolution: 131072.0
        motor_constant: 0.00105
      safe_hp:
        control_mode: position
      safe_ht:
        control_mode: position
      driver_t:
        control_mode: torque
        homing_done: true
      driver_hp:
        control_mode: position
        homing_done: false
      driver_ht:
        control_mode: position
        homing_done: false
      TorsoPanTransmision:
        motor_offset: 270119630
        joint_offset: 0.0
        gear: 158.0
        encoder_res: 131072.0
        enable_position: true
        enable_velocity: true
      TorsoPanTransmisionInv:
        motor_offset: 270119630
        joint_offset: 0.0
        gear: 158.0
        encoder_res: 131072.0
        motor_constant: 0.00105
        enable_torque: true
      HeadPanTransmision:
        motor_offset: 0.0
        joint_offset: 0.0
        gear: -100.0
        encoder_res: 8000.0
        enable_position: true
        enable_velocity: true
      HeadPanTransmisionInv:
        motor_offset: 0.0
        joint_offset: 0.0
        gear: -100.0
        encoder_res: 8000.0
        motor_constant: 0.0
        enable_position: true
        enable_velocity: true
      HeadTiltTransmision:
        motor_offset: 0.0
        joint_offset: 0.0
        gear: 100.0
        encoder_res: 8000.0
        enable_position: true
        enable_velocity: true
      HeadTiltTransmisionInv:
        motor_offset: 0.0
        joint_offset: 0.0
        gear: 100.0
        encoder_res: 8000.0
        motor_constant: 0.0
        enable_position: true
        enable_velocity: true
      rHand:
        device_name: TODO
        prefix: right
        can_id_base: 11
      lHand:
        device_name: TODO
        prefix: left
        can_id_base: 11
      FtSensorRight:
        scaling_factor: 0.000001
        transform_xyz: [0, 0, 0]      
        transform_rpy: [-1.570796327, 0.5235987756, -1.570796327] <!-- rotations from wrist to sensor frame (trasform coordinates from sensor to wrist frame)-->     
      FtSensorLeft:
        scaling_factor: 0.000001
        transform_xyz: [0, 0, 0]      
        transform_rpy: [-1.570796327, 0.5235987756, 1.570796327] <!-- rotations from wrist to sensor frame -->
      CameraTrigger:
        skip_cycles: 50
    </rosparam>
  </group>
</launch>
