<subsystem_definition>

    <buffers>
<!--        <out alias="rLwr_st" type="velma_core_ve_re_lwr_msgs::Status"   side="top" />
        <in alias="rLwr_cmd" type="velma_core_ve_re_lwr_msgs::Command"  side="top" />
        <out alias="lLwr_st" type="velma_core_ve_re_lwr_msgs::Status"   side="top" />
        <in alias="lLwr_cmd" type="velma_core_ve_re_lwr_msgs::Command"  side="top" />
-->
        <out alias="ec_st"   type="velma_ec_gen_msgs::EcInput"          side="top"  converter="velma_ec_gen_msgs::EcInputBufferConverter"/>
        <in alias="ec_cmd"   type="velma_ec_gen_msgs::EcOutput"         side="top"  converter="velma_ec_gen_msgs::EcOutputBufferConverter"/>
    </buffers>

    <buffer_groups>
        <buffer_group name="command" >
            <optional name="ec_cmd" />
        </buffer_group>
    </buffer_groups>

    <predicates>
    </predicates>

    <behaviors>
        <behavior name="normal"
            stop_cond="FALSE"
            err_cond="FALSE" >
            <running_component name="Y" />
        </behavior>
    </behaviors>

    <states initial="normal">
        <state name="normal">
            <behavior name="normal" />
            <buffer_group name="command" min_period="0.002" first_timeout="0" next_timeout="0" first_timeout_sim="0" used_time="real" />
        </state>
    </states>

    <simulation use_ros_sim_clock="false" use_sim_clock="false" trigger_gazebo="false" />

</subsystem_definition>
